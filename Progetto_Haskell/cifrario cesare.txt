import Data.Char

low2int :: Char -> Int
low2int c = ord c - ord 'a'

int2low :: Int -> Char
int2low n = chr (ord 'a' + n)

upp2int :: Char -> Int
upp2int c = ord c - ord 'A'

int2upp :: Int -> Char
int2upp n = chr(ord 'A' + n)

num2int :: Char -> Int
num2int c = ord c - ord '1'

int2num :: Int -> Char
int2num n = chr (ord '1' + n)

shift :: Int -> Char -> Char 
shift n c | isLower c = int2low ((low2int c + n) `mod` 26)
          | isUpper c = int2upp ((upp2int c + n) `mod` 26)
          | isDigit c = int2num ((num2int c + n) `mod` 10)
          |otherwise  = c

encode :: Int -> String ->String
encode n xs = [shift n x | x<-xs]

main = print(encode (2) "I7X")